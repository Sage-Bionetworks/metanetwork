[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project lead Sage Privacy Officer privacyofficer@sagebase.org. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to sageseqr","title":"Contributing to sageseqr","text":"spirit open team science, contributions resource encouraged welcome!","code":""},{"path":"/CONTRIBUTING.html","id":"file-a-bug","dir":"","previous_headings":"","what":"File a bug","title":"Contributing to sageseqr","text":"Document problem issue includes minimal reproducible example.","code":""},{"path":"/CONTRIBUTING.html","id":"open-a-pull-request-pr","dir":"","previous_headings":"","what":"Open a pull request (PR)","title":"Contributing to sageseqr","text":"File issue first discuss bug idea proposed PR. Create Git branch pull request (PR). package uses roxygen2 Markdown syntax function documentation. Generally, new functions tested testthat.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to sageseqr","text":"sageseqr released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pradeep Pugalenthi. Author, maintainer. Jake Gockley. Contributor. Benjamin Logsdon. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pugalenthi P, Logsdon B (2022). metanetwork: Network meta analysis. hhttps://sage-bionetworks.github.io/metanetwork, https://github.com/Sage-Bionetworks/metanetwork.","code":"@Manual{,   title = {metanetwork: Network meta analysis},   author = {Pradeep Pugalenthi and Benjamin Logsdon},   year = {2022},   note = {hhttps://sage-bionetworks.github.io/metanetwork, https://github.com/Sage-Bionetworks/metanetwork}, }"},{"path":"/index.html","id":"readme","dir":"","previous_headings":"","what":"Network meta analysis","title":"Network meta analysis","text":"R package build many different statistical networks high dimensional multivariate data run diagnostic statistics","code":""},{"path":"/index.html","id":"what-is-this-repository-for","dir":"","previous_headings":"","what":"What is this repository for?","title":"Network meta analysis","text":"Metanetworks Package Setup ** Docker Container Setup Package Install Running Metanetworks Package - Network Construction Running Metatnetworks Package - Module Construction Runing Metanetworks Package - Consensus Network Construction Version","code":""},{"path":"/index.html","id":"how-do-i-get-set-up","dir":"","previous_headings":"","what":"How do I get set up?","title":"Network meta analysis","text":"Pull metanetworks package repo dockerfile sample configuration files dockerfile setup proper run environment install metanetwork package located within pacakge metanetwork/inst/Docker/. build docker image proper environment run following command directory cloned pacakge contents . Start container detached continual run mode pass build comands . Use -v command pass current working directory current container. file folder within <Project Working Directory> available within container /root/. Conversly file written /root/ inside container written <Project Working Directory> outside container. makes checking log files diagnosising potential issues much easier. container name metanets specified --name. Basic commands manipulate containers","code":"cd <Project Working Directory> git clone https://github.com/Sage-Bionetworks/metanetwork.git docker build -t metanets metanetwork/inst/Docker/ docker run -it -d -v \"/<Project Working Directory>/:/root/\" --name networks metanets # See running containers docker container ls  # See all containers docker ps -a  # Stop the container docker stop <container name> #eg. docker stop metanets  # Start the container docker start <container name> #eg, docker start metanets  # What if I want an interactive terminal session inside the container? docker exec -it <container name> /bin/bash cd ~ #eg. docker exec -it metanets /bin/bash cd /root/"},{"path":"/index.html","id":"building-individual-networks","dir":"","previous_headings":"","what":"Building Individual Networks","title":"Network meta analysis","text":"network build passing 3 parameters R script called Network_Wrapper.R. script located within metanets package within metanetwork/inst/runscripts/. Since file mounted <Project Working Directory> volume accessible inside container filepath /root/metanetwork/inst/runscripts/Network_Wrapper.R. run parameters required script follows: first two arguments straight forward third involved. configuration YAML file specifies details network construction. detailed documentaition file see: metanetwork/inst/confighelp/Network_Wrapper_Config_Documentation.Rmd. example configuration files see: metanetwork/inst/config/network-construction/. network type built single run command passed docker container already running detached mode. example run command sample configuration file : first two commands set proper OpenMPI libraries executable paths container’s LD_LIBRARY_PATH PATH environment variables. final command executes network wrapper configuration file implementation OpenMPI. OpenMPI subdivides compute environment sub-cores effciently process network construction. NOTE: highly adviseable run one network time compute environment since OpenMPI designed run top . can check run progress network log.log file. imported working envionment container file available <Project Working Directory>/log.log updates live within running container. want run multiple networks parallel recomend deploying independent machines, either seperate HPC clusters cloud based instances amazon EC-2 instances. also allow requisition approriately sized machines given network approach. benchmarking expectations run RNA-Seq dataset 750 samples 9,740 genes machine consisting 16 cores (vCPU) 128 GiB (Memory) amazon EC-2 instance (r5.4xlarge) runtimes :","code":"-u, --synapse_user  Synapse User name     -p, --synapse_pass  Synapse User Password     -c, --config_file   Path to the complete config file docker exec -itd networks /bin/sh -c \"export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib &&      export PATH=/usr/lib64/openmpi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib64/openmpi/bin &&  mpiexec --allow-run-as-root --mca orte_base_help_aggregate 0 --mca btl_base_warn_component_unused 0 -np 1 Rscript /root/metanetwork/inst/runscripts/Network_Wrapper.R  -u <Synapse User Name> -p <Synapse User Password> -c /root/metanetwork/inst/config/network-construction/c3net.yml > /root/log.log\" Light Networks: c3net, mrnet, wgcna: (estimated less than 3 Hours) Medium Networks: lassoAIC, lassoBIC, lassoCV1se, lassoCVmin, ridgeAIC, ridgeBIC, ridgeCV1se, ridgeCVmin, sparrowZ, sparrow2Z: (estimated around 10-12 Hours) Heavy Networks: genie3, tigress: (TBD)"},{"path":[]},{"path":"/index.html","id":"who-do-i-talk-to","dir":"","previous_headings":"","what":"Who do I talk to?","title":"Network meta analysis","text":"Repo owner admin community team contact","code":""},{"path":"/reference/applySparrowBonferroni.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies Bonferroni Correction to a Sparrow Network Object — applySparrowBonferroni","title":"Applies Bonferroni Correction to a Sparrow Network Object — applySparrowBonferroni","text":"function applies bonferroni correction sparrow network object.","code":""},{"path":"/reference/applySparrowBonferroni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies Bonferroni Correction to a Sparrow Network Object — applySparrowBonferroni","text":"","code":"applySparrowBonferroni(network)"},{"path":"/reference/applySparrowBonferroni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies Bonferroni Correction to a Sparrow Network Object — applySparrowBonferroni","text":"network n x n upper triangular adjacency matrix class format.","code":""},{"path":"/reference/applySparrowBonferroni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies Bonferroni Correction to a Sparrow Network Object — applySparrowBonferroni","text":"n x n upper triangular adjacency matrix class format.","code":""},{"path":"/reference/applySparrowFDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies FDR Correction to a Sparrow Network Object — applySparrowFDR","title":"Applies FDR Correction to a Sparrow Network Object — applySparrowFDR","text":"function applies FDR correction sparrow network object.","code":""},{"path":"/reference/applySparrowFDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies FDR Correction to a Sparrow Network Object — applySparrowFDR","text":"","code":"applySparrowFDR(network)"},{"path":"/reference/applySparrowFDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies FDR Correction to a Sparrow Network Object — applySparrowFDR","text":"network n x n upper triangular adjacency matrix class format.","code":""},{"path":"/reference/applySparrowFDR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies FDR Correction to a Sparrow Network Object — applySparrowFDR","text":"n x n upper triangular adjacency matrix class format.","code":""},{"path":"/reference/aracne.html","id":null,"dir":"Reference","previous_headings":"","what":"This function applies ARACNE on the data — aracne","title":"This function applies ARACNE on the data — aracne","text":"function takes gene expression matrix gene expression applies ARACNE gene co-expression network analysis frame work find coexpressed gene pairs matrix. ARACNE framework also installed within package located `inst/tools/` direcctory. information  ARACNE framework see: <https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-7-S1-S7>","code":""},{"path":"/reference/aracne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function applies ARACNE on the data — aracne","text":"","code":"aracne(data, path = NULL, pval = NULL, outputpath, na_fill = NULL)"},{"path":"/reference/aracne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function applies ARACNE on the data — aracne","text":"data Required. gene expression matrix rows sample IDs columns Gene feature IDs path Optional. String containing path aracne compiled  executable. (Default = NULL) pval Optional. Cutoff p-value determine coexpressed edge. (Default = 0.05) outputpath Required. path resulting network saved . na_fill Optional. Value replace `NA` values ideally, large  negative number use min(data). (Default = NULL)","code":""},{"path":"/reference/aracne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function applies ARACNE on the data — aracne","text":"Co-Expression Network saved path `outputpath` titled  `aracneThresholdNetwork.csv` (`pval` < 1) `aracneNetwork.csv`   `pval` set 1.","code":""},{"path":"/reference/arbitrarySparsity.html","id":null,"dir":"Reference","previous_headings":"","what":"This function Builds an arbitary sparse network — arbitrarySparsity","title":"This function Builds an arbitary sparse network — arbitrarySparsity","text":"introduces sparsity data frame matrix increasing frequency `nedges` parameter specified","code":""},{"path":"/reference/arbitrarySparsity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function Builds an arbitary sparse network — arbitrarySparsity","text":"","code":"arbitrarySparsity(nedges, network)"},{"path":"/reference/arbitrarySparsity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function Builds an arbitary sparse network — arbitrarySparsity","text":"nedges Required. Edges parameter increase sparsity. network Required. matrix data frame gene expression","code":""},{"path":"/reference/arbitrarySparsity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function Builds an arbitary sparse network — arbitrarySparsity","text":"logical matrix TRUE/FALSE True indicates sparsity","code":""},{"path":"/reference/buildConsensus.html","id":null,"dir":"Reference","previous_headings":"","what":"This function builds the Consensus Network from the component network — buildConsensus","title":"This function builds the Consensus Network from the component network — buildConsensus","text":"function builds consensus co-expression network.","code":""},{"path":"/reference/buildConsensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function builds the Consensus Network from the component network — buildConsensus","text":"","code":"buildConsensus(outputpath, networkFolderId, fileName = NULL, pattern_id)"},{"path":"/reference/buildConsensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function builds the Consensus Network from the component network — buildConsensus","text":"outputpath Required. Local directory load files save files . networkFolderId Required. Synapse parent ID folder containing folders individual networks. fileName Required. input file path. pattern_id Required. character vector match file names  children entities `project_id`.","code":""},{"path":"/reference/buildConsensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function builds the Consensus Network from the component network — buildConsensus","text":"Saves rankc consensus network `outputpath` saves BICNetwork  object `outputpath` `fileName` specified","code":""},{"path":"/reference/c3netWrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"This function wraps c3net implementation — c3netWrapper","title":"This function wraps c3net implementation — c3netWrapper","text":"function wraps c3net call gene expression matrix. takes transpose typical gene expression matrix rows sample IDs  columns Gene IDs order convert calling `c3net()` function.","code":""},{"path":"/reference/c3netWrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function wraps c3net implementation — c3netWrapper","text":"","code":"c3netWrapper(data, pval = 1, outputpath)"},{"path":"/reference/c3netWrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function wraps c3net implementation — c3netWrapper","text":"data Required. Matrix containing gene expression values subjects  row values gene features column IDs. pval Optional. Currently implemented. (Default = 1) outputpath Required. Path save resulting network","code":""},{"path":"/reference/c3netWrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function wraps c3net implementation — c3netWrapper","text":"Returns symmetric mutual information matrix, obtained  implementing C3NET. Specifically, non-zero elements returned matrix  represents undirected link variables. inferred network may also  plotted argument network set TRUE.","code":""},{"path":"/reference/c3netWrapper.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"This function wraps c3net implementation — c3netWrapper","text":"G. Altay, F. Emmert-Streib, \"Inferring conservative causal core gene regulatory networks\", BMC Systems Biology (2010) 4:132.","code":""},{"path":"/reference/calcHyperPval.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Hypergeometric PValue — calcHyperPval","title":"Compute Hypergeometric PValue — calcHyperPval","text":"Computes hypergeometric enrichment test geneset `geneSetToTest`  given module genes `moduleGenes` given total background set genes  `backgroundGenes`. Returns P-Value enrichment test.","code":""},{"path":"/reference/calcHyperPval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Hypergeometric PValue — calcHyperPval","text":"","code":"calcHyperPval(geneSetToTest, moduleGenes, backgroundGenes)"},{"path":"/reference/calcHyperPval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Hypergeometric PValue — calcHyperPval","text":"geneSetToTest Required. character vector gene IDs test  enrichment `moduleGenes`. moduleGenes Required. character vector gene IDs test  enriched `geneSetToTest`. backgroundGenes Required. character vector gene IDs serves  background gene set.","code":""},{"path":"/reference/calcHyperPval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Hypergeometric PValue — calcHyperPval","text":"numerical PValue","code":""},{"path":"/reference/compute.LocalModularity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Local Modularity (NQ) — compute.LocalModularity","title":"Find Local Modularity (NQ) — compute.LocalModularity","text":"function finds local modularity (NQ) upper triangular adjacency matrix.","code":""},{"path":"/reference/compute.LocalModularity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Local Modularity (NQ) — compute.LocalModularity","text":"","code":"# S3 method for LocalModularity compute(adj, mod)"},{"path":"/reference/compute.LocalModularity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Local Modularity (NQ) — compute.LocalModularity","text":"adj Required. n x n upper triangular adjacency matrix class  format. mod Required. n x 3 dimensional data frame column names  Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/compute.LocalModularity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Local Modularity (NQ) — compute.LocalModularity","text":"NQ = local modularity index.","code":""},{"path":"/reference/compute.Modularity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Global Modularity (Q) — compute.Modularity","title":"Find Global Modularity (Q) — compute.Modularity","text":"function finds Function find global modularity (Q) upper triangular adjacency matrix.","code":""},{"path":"/reference/compute.Modularity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Global Modularity (Q) — compute.Modularity","text":"","code":"# S3 method for Modularity compute(adj, mod, method = \"Newman1\")"},{"path":"/reference/compute.Modularity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Global Modularity (Q) — compute.Modularity","text":"adj Required. n x n upper triangular adjacency matrix class  format. mod Required. n x 3 dimensional data frame column names  Gene.ID, moduleNumber, moduleLabel. method Optional. 'Newman1' specified modularity instituded  -per Clauset, Newman model function igraph::graph.modularity() (Default = 'Newman1')","code":""},{"path":"/reference/compute.Modularity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Global Modularity (Q) — compute.Modularity","text":"Q = modularity index.","code":""},{"path":"/reference/compute.ModularityDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Global Modularity (Qds) — compute.ModularityDensity","title":"Find Global Modularity (Qds) — compute.ModularityDensity","text":"function finds calculates modularity density.","code":""},{"path":"/reference/compute.ModularityDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Global Modularity (Qds) — compute.ModularityDensity","text":"","code":"# S3 method for ModularityDensity compute(adj, mod)"},{"path":"/reference/compute.ModularityDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Global Modularity (Qds) — compute.ModularityDensity","text":"adj Required. n x n upper triangular adjacency matrix class  format. mod Required. n x 3 dimensional data frame column names  Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/compute.ModularityDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Global Modularity (Qds) — compute.ModularityDensity","text":"Qds = module density.","code":""},{"path":"/reference/compute.ModuleQualityMetric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find  Modularity Quality — compute.ModuleQualityMetric","title":"Find  Modularity Quality — compute.ModuleQualityMetric","text":"function finds qulaity metrics modules","code":""},{"path":"/reference/compute.ModuleQualityMetric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find  Modularity Quality — compute.ModuleQualityMetric","text":"","code":"# S3 method for ModuleQualityMetric compute(adj, mod)"},{"path":"/reference/compute.ModuleQualityMetric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find  Modularity Quality — compute.ModuleQualityMetric","text":"adj Required. n x n upper triangular adjacency matrix class  format. mod Required. n x 3 dimensional data frame column names  Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/compute.ModuleQualityMetric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find  Modularity Quality — compute.ModuleQualityMetric","text":"metrics = data frame module quality metrics.","code":""},{"path":"/reference/computeBICcurve.html","id":null,"dir":"Reference","previous_headings":"","what":"This Function Computes a Network BIC Curve — computeBICcurve","title":"This Function Computes a Network BIC Curve — computeBICcurve","text":"(?)","code":""},{"path":"/reference/computeBICcurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This Function Computes a Network BIC Curve — computeBICcurve","text":"","code":"computeBICcurve(network, exprData, maxEdges = NULL, exact = NULL)"},{"path":"/reference/computeBICcurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This Function Computes a Network BIC Curve — computeBICcurve","text":"network network object exprData Expression data matrix maxEdges Optional. (Default = NULL) exact Optional.  (Default = NULL)","code":""},{"path":"/reference/computeBICcurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This Function Computes a Network BIC Curve — computeBICcurve","text":"list object containing values sparse network, best fit minimum BIC, ","code":""},{"path":"/reference/computeDriverDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Graph Distance — computeDriverDistance","title":"Compute Graph Distance — computeDriverDistance","text":"Finds finds maximal (weakly strongly) connected component `graph`  returns distances members `geneSet` found  largest component.","code":""},{"path":"/reference/computeDriverDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Graph Distance — computeDriverDistance","text":"","code":"computeDriverDistance(geneSet, graph)"},{"path":"/reference/computeDriverDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Graph Distance — computeDriverDistance","text":"geneSet Required. user specified gene set corresponding vertex names `graph`. names required entirely represented  graph object. graph Required. igraph graph object consisting vertices genes edges representing co-expression genes.","code":""},{"path":"/reference/computeDriverDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Graph Distance — computeDriverDistance","text":"list consisting mean distance genes within largest component  paiwise list distances.","code":""},{"path":"/reference/computeDriverDistancePvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Driver Distance P-Value — computeDriverDistancePvalue","title":"Compute Driver Distance P-Value — computeDriverDistancePvalue","text":"Calculates Driver Distance `geneSet` `graph` described `metanetworks::computeDriverDistance` permutes `nsamp` permutations random gene sets `graph` size `geneSet` create null distribution derive p-values Driver Distances `geneSet`.","code":""},{"path":"/reference/computeDriverDistancePvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Driver Distance P-Value — computeDriverDistancePvalue","text":"","code":"computeDriverDistancePvalue(geneSet, graph, nsamp = 100)"},{"path":"/reference/computeDriverDistancePvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Driver Distance P-Value — computeDriverDistancePvalue","text":"geneSet Required. user specified gene set corresponding vertex names `graph`. names required entirely represented  graph object. graph Required. igraph graph object consisting vertices genes edges representing co-expression genes. nsamp Optional. Number permutations build null distribution p-value construction (Default = 100)","code":""},{"path":"/reference/computeDriverDistancePvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Driver Distance P-Value — computeDriverDistancePvalue","text":"list consisting mean distance genes within largest component  , pairwise list distances, vector length `nsamp` consisting null distribution calculate p-value.","code":""},{"path":"/reference/correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Correlation Matrix — correlation","title":"Compute a Correlation Matrix — correlation","text":"Compute Correlation matrix expression matrix writes user specified path. Correlation network saved correlationNetwork.csv path specified `outputpath`.","code":""},{"path":"/reference/correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Correlation Matrix — correlation","text":"","code":"correlation(data, path = NULL, method = \"pearson\", outputpath)"},{"path":"/reference/correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Correlation Matrix — correlation","text":"data input expression/numerical data matrix path Optional. Currently implemented function method Optional. type correlation implemented. Options one ; c('pearson','spearman','kendall'). (Default = pearson) outputpath file path save correlation network .","code":""},{"path":"/reference/correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Correlation Matrix — correlation","text":"Returns value direct R. function saves correlation network correlationNetwork.csv path specified `outputpath`.","code":""},{"path":"/reference/covarianceSelection.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Selection with Graphical Lasso — covarianceSelection","title":"Covariance Selection with Graphical Lasso — covarianceSelection","text":"Estimates sparse inverse covariance matrix using lasso (L1) penalty.","code":""},{"path":"/reference/covarianceSelection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Selection with Graphical Lasso — covarianceSelection","text":"","code":"covarianceSelection(S, rankedEdges)"},{"path":"/reference/covarianceSelection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Selection with Graphical Lasso — covarianceSelection","text":"S Required. symetric p--p covariance matrix. rankedEdges Required. list ranked edges constrained zero.","code":""},{"path":"/reference/covarianceSelection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Selection with Graphical Lasso — covarianceSelection","text":"list components. `w` Estimated inverse covariance matrix. `loglik`\tValue maximized log-likelihodo+penalty. `errflag`\tMemory allocation error flag: 0 means error; !=0 means     memory allocation error - output returned. `approx`\tValue input argument approx. `del` Change parameter value convergence. `niter`\tNumber iterations outer loop used algorithm.","code":""},{"path":"/reference/covarianceSelectionBisection.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Selection with Bisection Optimization — covarianceSelectionBisection","title":"Covariance Selection with Bisection Optimization — covarianceSelectionBisection","text":"Selects optimal covariance matrix BIC convergence.","code":""},{"path":"/reference/covarianceSelectionBisection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Selection with Bisection Optimization — covarianceSelectionBisection","text":"","code":"covarianceSelectionBisection(   S,   rankedEdges,   numberObservations,   lowerBoundEdge,   upperBoundEdge )"},{"path":"/reference/covarianceSelectionBisection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Selection with Bisection Optimization — covarianceSelectionBisection","text":"S Required. symetric p--p covariance matrix. rankedEdges Required. list ranked edges constrained zero. numberObservations Required. Number observations used calculate  BIC estimates. lowerBoundEdge Required. Numeric specifying lower bound number  parameters (d) BIC calculation: `BIC = -2 * loglikelihood + d * log(N)` upperBoundEdge Required. Numeric specifying upper bound number  parameters (d) BIC calculation: `BIC = -2 * loglikelihood + d * log(N)`","code":""},{"path":"/reference/covarianceSelectionBisection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Selection with Bisection Optimization — covarianceSelectionBisection","text":"list containg `w` Estimated inverse covariance matrix. `resMiddle`\tconverged sparse inverse covariance matrix. `bicMiddle`\tconverged BIC estimate. `middleEdge` converged estimate parameters.","code":""},{"path":"/reference/covarianceSelectionMBPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance based on Neighborhood Selection — covarianceSelectionMBPath","title":"Covariance based on Neighborhood Selection — covarianceSelectionMBPath","text":"function defines covariance neighborhood gene-gene edges expression matrix.","code":""},{"path":"/reference/covarianceSelectionMBPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance based on Neighborhood Selection — covarianceSelectionMBPath","text":"","code":"covarianceSelectionMBPath(X, rankedEdges, numberObservations, startI = 1)"},{"path":"/reference/covarianceSelectionMBPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance based on Neighborhood Selection — covarianceSelectionMBPath","text":"X Required. expression matrix rankedEdges Required. edge list form matrix column one gene one column 2 gene two numberObservations Required. number samples comprising network (?) startI Optional. Start first edge `rankedEdges` (Default = 1)","code":""},{"path":"/reference/covarianceSelectionMBPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance based on Neighborhood Selection — covarianceSelectionMBPath","text":"list object containing BIC estimate, bicNeighborhood (?) , neighborhoods (?), flag (?)","code":""},{"path":"/reference/covarianceSelectionPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Selection with Path BIC Selection — covarianceSelectionPath","title":"Covariance Selection with Path BIC Selection — covarianceSelectionPath","text":"Selects optimal covariance matrix Path BIC Selection.","code":""},{"path":"/reference/covarianceSelectionPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Selection with Path BIC Selection — covarianceSelectionPath","text":"","code":"covarianceSelectionPath(S, rankedEdges, numberObservations, n)"},{"path":"/reference/covarianceSelectionPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Selection with Path BIC Selection — covarianceSelectionPath","text":"S Required. expression matrix rankedEdges Required. edge list form matrix column one gene one column 2 gene two numberObservations Required. number samples comprising network (?) n Optional. Start first edge `rankedEdges` (Default = 1)","code":""},{"path":"/reference/covarianceSelectionPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Selection with Path BIC Selection — covarianceSelectionPath","text":"list containg `bic` Estimated BIC. `bicmin` Lowest Estimated BIC. `w`\tcovariance matrix. `wi` inverse covariance matrix.","code":""},{"path":"/reference/deployNetworkSparsity.html","id":null,"dir":"Reference","previous_headings":"","what":"This function deploys arbitary sparsity on a list of networks — deployNetworkSparsity","title":"This function deploys arbitary sparsity on a list of networks — deployNetworkSparsity","text":"introduces sparsity list data frames matrices  `arbitrarySparsity()` function increasing frequency `sparsity` parameter specified","code":""},{"path":"/reference/deployNetworkSparsity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function deploys arbitary sparsity on a list of networks — deployNetworkSparsity","text":"","code":"deployNetworkSparsity(network, sparsity)"},{"path":"/reference/deployNetworkSparsity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function deploys arbitary sparsity on a list of networks — deployNetworkSparsity","text":"network Required. matrix data frame gene expression sparsity Required. Edges parameter increase sparsity.","code":""},{"path":"/reference/deployNetworkSparsity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function deploys arbitary sparsity on a list of networks — deployNetworkSparsity","text":"list logical matrices TRUE/FALSE True indicates sparsity","code":""},{"path":"/reference/fastlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Linear Modeling — fastlm","title":"Fast Linear Modeling — fastlm","text":"function retuns results fast linear model","code":""},{"path":"/reference/fastlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Linear Modeling — fastlm","text":"","code":"fastlm(y, x)"},{"path":"/reference/fastlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Linear Modeling — fastlm","text":"y Required. vector response values x Required. vector matric number observations/rows y","code":""},{"path":"/reference/fastlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Linear Modeling — fastlm","text":"vector ZValues","code":""},{"path":"/reference/fastlmbic.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Linear Modeling BIC — fastlmbic","title":"Fast Linear Modeling BIC — fastlmbic","text":"function deploys matrix operations calculate model BIC given vector model coefficients.","code":""},{"path":"/reference/fastlmbic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Linear Modeling BIC — fastlmbic","text":"","code":"fastlmbic(y, x = NULL, correction = 1)"},{"path":"/reference/fastlmbic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Linear Modeling BIC — fastlmbic","text":"y numeric vector model coefficients. set x  becomes vector integers 1 length(y). (?) x Optional. numeric vector matrix model coefficients. set x  becomes vector integers 1 length(y). (?) correction vector correction factors","code":""},{"path":"/reference/fastlmbic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Linear Modeling BIC — fastlmbic","text":"BIC estimate","code":""},{"path":"/reference/fdrThres.html","id":null,"dir":"Reference","previous_headings":"","what":"FDR Threshold — fdrThres","title":"FDR Threshold — fdrThres","text":"function applies user FDR threshold input p-values","code":""},{"path":"/reference/fdrThres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FDR Threshold — fdrThres","text":"","code":"fdrThres(pval, fdr = 0.05)"},{"path":"/reference/fdrThres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FDR Threshold — fdrThres","text":"pval Required. vector uncorected P-Values. fdr Optional. desired FDR cutoff. (Default = 0.05) y","code":""},{"path":"/reference/fdrThres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FDR Threshold — fdrThres","text":"Corrected PValues","code":""},{"path":"/reference/findModules.CFinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with CFinder — findModules.CFinder","title":"Find Modules with CFinder — findModules.CFinder","text":"Function get modules network adjacency matrix using CFinder algorithm","code":""},{"path":"/reference/findModules.CFinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with CFinder — findModules.CFinder","text":"","code":"findModules.CFinder(adj, path, nperm = 10, min.module.size = 30)"},{"path":"/reference/findModules.CFinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with CFinder — findModules.CFinder","text":"adj n x n upper triangular adjacency matrix class format. path File path location CFinder. nperm Optional. Number permutation gene ordering. (Default = 10) min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.CFinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with CFinder — findModules.CFinder","text":"eneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.CFinder.once.html","id":null,"dir":"Reference","previous_headings":"","what":"This function tries to get modules from network adjacency matrix using Link \ncommunities algorithm. — findModules.CFinder.once","title":"This function tries to get modules from network adjacency matrix using Link \ncommunities algorithm. — findModules.CFinder.once","text":"function tries get modules network adjacency matrix using Link  communities algorithm.","code":""},{"path":"/reference/findModules.CFinder.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function tries to get modules from network adjacency matrix using Link \ncommunities algorithm. — findModules.CFinder.once","text":"","code":"findModules.CFinder.once(adj, path, min.module.size, i)"},{"path":"/reference/findModules.CFinder.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function tries to get modules from network adjacency matrix using Link \ncommunities algorithm. — findModules.CFinder.once","text":"adj n x n upper triangular adjacency matrix class format. path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30) Required. Character name temp file name generate.","code":""},{"path":"/reference/findModules.CFinder.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function tries to get modules from network adjacency matrix using Link \ncommunities algorithm. — findModules.CFinder.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.GANXiS.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with GANXiS — findModules.GANXiS","title":"Find Modules with GANXiS — findModules.GANXiS","text":"function get modules network adjacency matrix using GANXiS  community detection algorithm v3.0.2.","code":""},{"path":"/reference/findModules.GANXiS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with GANXiS — findModules.GANXiS","text":"","code":"findModules.GANXiS(adj, path, nperm = 10, min.module.size = 30)"},{"path":"/reference/findModules.GANXiS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with GANXiS — findModules.GANXiS","text":"adj n x n upper triangular adjacency matrix class format. path File path location CFinder. nperm Optional. Number permutation gene ordering. (Default = 10) min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.GANXiS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with GANXiS — findModules.GANXiS","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.GANXiS.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules using GANXIS — findModules.GANXiS.once","title":"Find Modules using GANXIS — findModules.GANXiS.once","text":"function finds modules GANXIS","code":""},{"path":"/reference/findModules.GANXiS.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules using GANXIS — findModules.GANXiS.once","text":"","code":"findModules.GANXiS.once(adj, path, min.module.size)"},{"path":"/reference/findModules.GANXiS.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules using GANXIS — findModules.GANXiS.once","text":"adj n x n upper triangular adjacency matrix class format. path Required. File path location GANXiS min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.GANXiS.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules using GANXIS — findModules.GANXiS.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.consensusCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds Consensus Clusters — findModules.consensusCluster","title":"Finds Consensus Clusters — findModules.consensusCluster","text":"modiefed parallel version code imported  https://github.com/Bioconductor-mirror/ConsensusClusterPlus 1.11.1","code":""},{"path":"/reference/findModules.consensusCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds Consensus Clusters — findModules.consensusCluster","text":"","code":"findModules.consensusCluster(   d = NULL,   maxK = 100,   reps = 100,   pItem = 0.8,   pFeature = 1,   clusterAlg = \"kmeans\",   innerLinkage = \"average\",   distance = \"pearson\",   changeCDFArea = 0.001,   nbreaks = 20,   seed = 123456789.12345,   weightsItem = NULL,   weightsFeature = NULL,   corUse = \"everything\",   verbose = F )"},{"path":"/reference/findModules.consensusCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds Consensus Clusters — findModules.consensusCluster","text":"d Optional. matrix columns=items/samples rows features.  example, gene expression matrix genes rows microarrays columns. ExpressionSet object. (Default = NULL) maxK Optional.  integer value. maximum cluster number evaluate. (Default = 100) reps Optional. integer value. number subsamples.  (Default = 100) pItem Optional. numerical value. proportion items sample. (Default = 0.8) pFeature Optional. numerical value. proportion features sample. (Default = 1) clusterAlg Optional. character value. cluster algorithm. \"hc\"  heirarchical (hclust) \"km\" kmeans. (Default = \"kmeans\") innerLinkage Optional. heirarchical linkage method subsampling. (Default = \"average\") distance Optional. character value. sample distance measures:  \"pearson\",\"spearman\", \"euclidean\". (Default = \"pearson\") changeCDFArea Optional. Minimum spline distance seq(2,`maxK`, length.= `nbreaks`) (Default = 0.001) nbreaks Optional. Number breaks use  seq(2,`maxK`,length.= `nbreaks`) becomes kGrid argument  run.consensus.cluster. (Default = 20) seed Optional, numerical value. Sets random seed reproducible results. (Default = 123456789.12345) weightsItem Optional. numerical vector. weights used  sampling items. (Default = NULL) weightsFeature Optional. umerical vector. weights used  sampling features. (Default = NULL) corUse Optional. Use cores avaiable. (Default = \"Everything\") verbose Optional. boolean set TRUE, prints messages  screen indicate progress. useful large datasets.(Default = FALSE)","code":""},{"path":"/reference/findModules.consensusCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds Consensus Clusters — findModules.consensusCluster","text":"Final clustered modules.","code":""},{"path":"/reference/findModules.consensusKmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds Moduless With Kmeans Clustering — findModules.consensusKmeans","title":"Finds Moduless With Kmeans Clustering — findModules.consensusKmeans","text":"Function get consensus modules individual partition matrices","code":""},{"path":"/reference/findModules.consensusKmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds Moduless With Kmeans Clustering — findModules.consensusKmeans","text":"","code":"findModules.consensusKmeans(   partition.adj,   min.module.size = 20,   usepam = FALSE )"},{"path":"/reference/findModules.consensusKmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds Moduless With Kmeans Clustering — findModules.consensusKmeans","text":"partition.adj Required. partition.adj = n x m adjacency matrix,  n number genes m = number clustering methods * number  clusters method. min.module.size Optional. integer 1 n genes (Default = 20) usepam Optional. logical input pam based kmeans clustering  find number clusters function `fpc::pamk`. TRUE, pam used, otherwise clara (recommended large datasets 2,000  observations; dissimilarity matrices can used clara). (Default = 20)","code":""},{"path":"/reference/findModules.consensusKmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds Moduless With Kmeans Clustering — findModules.consensusKmeans","text":"dataframe Gene Modules","code":""},{"path":"/reference/findModules.edge_betweenness.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency — findModules.edge_betweenness","title":"Find Modules with Network Adjacency — findModules.edge_betweenness","text":"function finds modules network adjacency matrix.","code":""},{"path":"/reference/findModules.edge_betweenness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency — findModules.edge_betweenness","text":"","code":"findModules.edge_betweenness(adj, nperm = 10, path, min.module.size = 30)"},{"path":"/reference/findModules.edge_betweenness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency — findModules.edge_betweenness","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.edge_betweenness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency — findModules.edge_betweenness","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.edge_betweenness.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Single iteration — findModules.edge_betweenness.once","title":"Find Modules with Network Adjacency Single iteration — findModules.edge_betweenness.once","text":"function finds modules network adjacency matrix.","code":""},{"path":"/reference/findModules.edge_betweenness.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Single iteration — findModules.edge_betweenness.once","text":"","code":"findModules.edge_betweenness.once(adj, min.module.size)"},{"path":"/reference/findModules.edge_betweenness.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Single iteration — findModules.edge_betweenness.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.edge_betweenness.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Single iteration — findModules.edge_betweenness.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.fast_greedy.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with iGraph Fast and Greedy algorithm — findModules.fast_greedy","title":"Find Modules with iGraph Fast and Greedy algorithm — findModules.fast_greedy","text":"function wraps permutations finding modules  igraph::cluster_fast_greedy().","code":""},{"path":"/reference/findModules.fast_greedy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with iGraph Fast and Greedy algorithm — findModules.fast_greedy","text":"","code":"findModules.fast_greedy(adj, nperm = 10, min.module.size = 30)"},{"path":"/reference/findModules.fast_greedy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with iGraph Fast and Greedy algorithm — findModules.fast_greedy","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.fast_greedy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with iGraph Fast and Greedy algorithm — findModules.fast_greedy","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.fast_greedy.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules Fast and Greedy — findModules.fast_greedy.once","title":"Find Modules Fast and Greedy — findModules.fast_greedy.once","text":"function finds modules igraph::cluster_fast_greedy()","code":""},{"path":"/reference/findModules.fast_greedy.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules Fast and Greedy — findModules.fast_greedy.once","text":"","code":"findModules.fast_greedy.once(adj, min.module.size)"},{"path":"/reference/findModules.fast_greedy.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules Fast and Greedy — findModules.fast_greedy.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.fast_greedy.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules Fast and Greedy — findModules.fast_greedy.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.hclust.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Hierarchical Clustering — findModules.hclust","title":"Find Modules with Hierarchical Clustering — findModules.hclust","text":"function finds modules Hierarchical Clustering `fastcluster::hclust.vector()`","code":""},{"path":"/reference/findModules.hclust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Hierarchical Clustering — findModules.hclust","text":"","code":"findModules.hclust(   adj,   aggloMethod = \"ward\",   clustDistance = \"euclidean\",   minModuleSize = 30 )"},{"path":"/reference/findModules.hclust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Hierarchical Clustering — findModules.hclust","text":"adj Required. n x n upper triangular adjacency matrix class format. aggloMethod Optional. agglomeration method used. must  (unambiguous abbreviation ) one \"single\", \"ward\", \"centroid\" \"median\". (Default = \"ward\") clustDistance Optional. distance measure used. must  one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\".  unambiguous substring can given. (Default = \"euclidean\") minModuleSize Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.hclust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Hierarchical Clustering — findModules.hclust","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.infomap.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules using graph adjacency — findModules.infomap","title":"Find Modules using graph adjacency — findModules.infomap","text":"function wraps iterative process finding modules  igraph::graph.adjacency()","code":""},{"path":"/reference/findModules.infomap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules using graph adjacency — findModules.infomap","text":"","code":"findModules.infomap(adj, nperm = 10, path, min.module.size = 30)"},{"path":"/reference/findModules.infomap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules using graph adjacency — findModules.infomap","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.infomap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules using graph adjacency — findModules.infomap","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.infomap.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules using graph adjacency — findModules.infomap.once","title":"Find Modules using graph adjacency — findModules.infomap.once","text":"function finds modules igraph::graph.adjacency()","code":""},{"path":"/reference/findModules.infomap.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules using graph adjacency — findModules.infomap.once","text":"","code":"findModules.infomap.once(adj, min.module.size)"},{"path":"/reference/findModules.infomap.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules using graph adjacency — findModules.infomap.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.infomap.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules using graph adjacency — findModules.infomap.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.label_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Wraps Finding Modules with Graph Adjacency — findModules.label_prop","title":"Wraps Finding Modules with Graph Adjacency — findModules.label_prop","text":"Deploys `igraph::graph.adjacency` iterativly find module structure.","code":""},{"path":"/reference/findModules.label_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wraps Finding Modules with Graph Adjacency — findModules.label_prop","text":"","code":"findModules.label_prop(adj, nperm = 10, min.module.size = 30)"},{"path":"/reference/findModules.label_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wraps Finding Modules with Graph Adjacency — findModules.label_prop","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.label_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wraps Finding Modules with Graph Adjacency — findModules.label_prop","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.label_prop.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Graph Adjacency — findModules.label_prop.once","title":"Find Modules with Graph Adjacency — findModules.label_prop.once","text":"Deploys `igraph::graph.adjacency` find module structure.","code":""},{"path":"/reference/findModules.label_prop.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Graph Adjacency — findModules.label_prop.once","text":"","code":"findModules.label_prop.once(adj, min.module.size)"},{"path":"/reference/findModules.label_prop.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Graph Adjacency — findModules.label_prop.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.label_prop.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Graph Adjacency — findModules.label_prop.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.leading_eigen.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Leading Eigen Edges — findModules.leading_eigen","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen","text":"function iteratively wraps function tries find densely  connected subgraphs graph calculating leading non-negative  eigenvector modularity matrix graph.","code":""},{"path":"/reference/findModules.leading_eigen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen","text":"","code":"findModules.leading_eigen(adj, nperm = 10, min.module.size = 30)"},{"path":"/reference/findModules.leading_eigen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.leading_eigen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.leading_eigen.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Leading Eigen Edges — findModules.leading_eigen.once","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen.once","text":"function tries find densely connected subgraphs graph  calculating leading non-negative eigenvector modularity matrix  graph.","code":""},{"path":"/reference/findModules.leading_eigen.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen.once","text":"","code":"findModules.leading_eigen.once(adj, min.module.size)"},{"path":"/reference/findModules.leading_eigen.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.leading_eigen.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Leading Eigen Edges — findModules.leading_eigen.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.linkcommunities.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities","text":"function wraps function iteratively get modules network adjacency matrix using Link communities algorithm.","code":""},{"path":"/reference/findModules.linkcommunities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities","text":"","code":"findModules.linkcommunities(adj, nperm = 10, path, min.module.size = 30)"},{"path":"/reference/findModules.linkcommunities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.linkcommunities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.linkcommunities.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities.once","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities.once","text":"function tries get modules network adjacency matrix using Link  communities algorithm.","code":""},{"path":"/reference/findModules.linkcommunities.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities.once","text":"","code":"findModules.linkcommunities.once(adj, min.module.size)"},{"path":"/reference/findModules.linkcommunities.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.linkcommunities.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Link Communities Algorithm — findModules.linkcommunities.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.louvain.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain","text":"function wraps function iteratively get modules network adjacency matrix using igraph's louvain clusting function.","code":""},{"path":"/reference/findModules.louvain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain","text":"","code":"findModules.louvain(adj, nperm = 10, path, min.module.size = 30)"},{"path":"/reference/findModules.louvain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.louvain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.louvain.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain.once","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain.once","text":"function tries get modules network adjacency matrix using igraph's  louvain clusting function.","code":""},{"path":"/reference/findModules.louvain.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain.once","text":"","code":"findModules.louvain.once(adj, min.module.size)"},{"path":"/reference/findModules.louvain.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.louvain.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Louvain Clustering — findModules.louvain.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.megena.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Megena Clustering — findModules.megena","title":"Find Modules with Megena Clustering — findModules.megena","text":"function finds modules network adjacency matrix using MEGENA.","code":""},{"path":"/reference/findModules.megena.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Megena Clustering — findModules.megena","text":"","code":"findModules.megena(   data,   method = \"pearson\",   FDR.cutoff = 0.05,   module.pval = 0.05,   hub.pval = 0.05,   doPar = TRUE,   n.cores = NULL,   cor.perm = 10,   hub.perm = 100 )"},{"path":"/reference/findModules.megena.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Megena Clustering — findModules.megena","text":"data Required. n x n upper triangular adjacency matrix class  format. method Optional. Method correlation. either pearson spearman.  (Default = \"pearson\") FDR.cutoff Optional. FDR threshold define significant correlations  upon shuffling samples. (Default = 0.05) module.pval Optional. Module significance p-value. Recommended 0.05.  (Default = 0.05) hub.pval Optional. Connectivity significance p-value based random  tetrahedral networks. (Default = 0.05) doPar Optional. parallelization clusters allowed (Default =TRUE) n.cores Optional. number cores/threads call PCP. NULL,  n.cores = detectCores() - 1. (Default = NULL) cor.perm Optional. Number permutations calculating FDRs  correlation pairs. (Default = 10) hub.perm Optional. number permutations calculating connectivity  significance p-value. (Default = 100)","code":""},{"path":"/reference/findModules.megena.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Megena Clustering — findModules.megena","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.spinglass.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Spinglass Clustering — findModules.spinglass","title":"Find Modules with Network Adjacency Matrix Using Spinglass Clustering — findModules.spinglass","text":"function wraps function iteratively get modules network adjacency matrix using igraph's spinglass clusting function.","code":""},{"path":"/reference/findModules.spinglass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Spinglass Clustering — findModules.spinglass","text":"","code":"findModules.spinglass(adj, nperm = 10, path, min.module.size = 30)"},{"path":"/reference/findModules.spinglass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Spinglass Clustering — findModules.spinglass","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.spinglass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Spinglass Clustering — findModules.spinglass","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.spinglass.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using spinglass Clustering — findModules.spinglass.once","title":"Find Modules with Network Adjacency Matrix Using spinglass Clustering — findModules.spinglass.once","text":"function tries get modules network adjacency matrix using igraph's  spinglass clusting function.","code":""},{"path":"/reference/findModules.spinglass.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using spinglass Clustering — findModules.spinglass.once","text":"","code":"findModules.spinglass.once(adj, min.module.size)"},{"path":"/reference/findModules.spinglass.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using spinglass Clustering — findModules.spinglass.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.spinglass.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using spinglass Clustering — findModules.spinglass.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.walktrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap","text":"function wraps function iteratively get modules network adjacency matrix using igraph's walktrap clusting function.","code":""},{"path":"/reference/findModules.walktrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap","text":"","code":"findModules.walktrap(adj, nperm = 10, path, min.module.size = 30)"},{"path":"/reference/findModules.walktrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap","text":"adj n x n upper triangular adjacency matrix class format. nperm Optional. Number permutation gene ordering. (Default = 10) path File path location CFinder. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.walktrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/findModules.walktrap.once.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap.once","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap.once","text":"function tries get modules network adjacency matrix using igraph's  walktrap clusting function.","code":""},{"path":"/reference/findModules.walktrap.once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap.once","text":"","code":"findModules.walktrap.once(adj, min.module.size)"},{"path":"/reference/findModules.walktrap.once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap.once","text":"adj n x n upper triangular adjacency matrix class format. min.module.size Optional. Integer 1 n genes. (Default = 30)","code":""},{"path":"/reference/findModules.walktrap.once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Modules with Network Adjacency Matrix Using Walktrap Clustering — findModules.walktrap.once","text":"GeneModules = n x 3 dimensional data frame column names Gene.ID, moduleNumber, moduleLabel.","code":""},{"path":"/reference/fisherEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Fishers Enrichment Analysis — fisherEnrichment","title":"Fishers Enrichment Analysis — fisherEnrichment","text":"function perform Fishers enrichment analysis. Tests enrichment  `genesInGeneSet` `genesInModule` considering bacckground gene set   `genesInBackground`.","code":""},{"path":"/reference/fisherEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fishers Enrichment Analysis — fisherEnrichment","text":"","code":"fisherEnrichment(genesInModule, genesInGeneSet, genesInBackground)"},{"path":"/reference/fisherEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fishers Enrichment Analysis — fisherEnrichment","text":"genesInModule Required. character vector differentially expressed genes genes given module test genesInGeneSet Required. character vector genes gene set like GO annotations, pathways etc. genesInBackground Required. character vector background genes","code":""},{"path":"/reference/fisherEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fishers Enrichment Analysis — fisherEnrichment","text":"dataframe consisting column value fisher test P-Value. number  genes test set, enrichment set, overlap, odds ratio genes test set present enrichment set.","code":""},{"path":"/reference/genie3.html","id":null,"dir":"Reference","previous_headings":"","what":"Run genie3 — genie3","title":"Run genie3 — genie3","text":"function runs genie3 random forest network analysis ","code":""},{"path":"/reference/genie3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run genie3 — genie3","text":"","code":"genie3(y, x)"},{"path":"/reference/genie3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run genie3 — genie3","text":"y Required. response vector. factor, classification assumed, otherwise regression assumed. omitted, randomForest run  unsupervised mode. x Required. data frame matrix predictors, formula  describing model fitted (print method, randomForest object).","code":""},{"path":"/reference/genie3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run genie3 — genie3","text":"matrix importance measure, one row predictor variable.  column(s) different importance measures.","code":""},{"path":"/reference/installAracne.html","id":null,"dir":"Reference","previous_headings":"","what":"This function applies ARACNE on the data — installAracne","title":"This function applies ARACNE on the data — installAracne","text":"function installs ARACNE system Function","code":""},{"path":"/reference/installAracne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function applies ARACNE on the data — installAracne","text":"","code":"installAracne(path = NULL)"},{"path":"/reference/installAracne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function applies ARACNE on the data — installAracne","text":"path Optional. Path currently functional argument. function automatically installs ARACNe `inst/tools`. Default = NULL.","code":""},{"path":"/reference/lassoAIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab AIC Solution for Lasso — lassoAIC","title":"Grab AIC Solution for Lasso — lassoAIC","text":"function runs glmnet() function lasso regression pulls best AIC estimate.","code":""},{"path":"/reference/lassoAIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab AIC Solution for Lasso — lassoAIC","text":"","code":"lassoAIC(y, x)"},{"path":"/reference/lassoAIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab AIC Solution for Lasso — lassoAIC","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix)","code":""},{"path":"/reference/lassoAIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab AIC Solution for Lasso — lassoAIC","text":"Lowest AIC value.","code":""},{"path":"/reference/lassoBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab BIC Solution for Lasso — lassoBIC","title":"Grab BIC Solution for Lasso — lassoBIC","text":"function runs glmnet() function lasso regression pulls best  BIC estimate.","code":""},{"path":"/reference/lassoBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab BIC Solution for Lasso — lassoBIC","text":"","code":"lassoBIC(y, x)"},{"path":"/reference/lassoBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab BIC Solution for Lasso — lassoBIC","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix)","code":""},{"path":"/reference/lassoBIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab BIC Solution for Lasso — lassoBIC","text":"Lowest BIC value.","code":""},{"path":"/reference/lassoCV1se.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab CV1se Solution for Lasso Regression — lassoCV1se","title":"Grab CV1se Solution for Lasso Regression — lassoCV1se","text":"function runs glmnet() lasso regression pulls best beta value glmnet.fit object largest value lambda error  within 1 standard error minimum.","code":""},{"path":"/reference/lassoCV1se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab CV1se Solution for Lasso Regression — lassoCV1se","text":"","code":"lassoCV1se(y, x, folds = 10)"},{"path":"/reference/lassoCV1se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab CV1se Solution for Lasso Regression — lassoCV1se","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix) folds Optional. number cross validation folds partition  data . (Default = 10)","code":""},{"path":"/reference/lassoCV1se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab CV1se Solution for Lasso Regression — lassoCV1se","text":"beta value glmnet.fit object largest value  lambda error within 1 standard error minimum.","code":""},{"path":"/reference/lassoCVmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab CV1min Solution for Lasso Regression — lassoCVmin","title":"Grab CV1min Solution for Lasso Regression — lassoCVmin","text":"function runs glmnet() lasso regression pulls best beta  value glmnet.fit object value lambda gives minimum cvm.","code":""},{"path":"/reference/lassoCVmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab CV1min Solution for Lasso Regression — lassoCVmin","text":"","code":"lassoCVmin(y, x, folds = 10)"},{"path":"/reference/lassoCVmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab CV1min Solution for Lasso Regression — lassoCVmin","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix) folds Optional. number cross validation folds partition  data . (Default = 10)","code":""},{"path":"/reference/lassoCVmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab CV1min Solution for Lasso Regression — lassoCVmin","text":"beta value glmnet.fit object value lambda gives  minimum cvm","code":""},{"path":"/reference/metaNet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"metaNet: Statistical network exploration toolkit — metaNet-package","title":"metaNet: Statistical network exploration toolkit — metaNet-package","text":"Package run multiple different statistical network inference methodologies ultra-high dimensional data extract topological network features.","code":""},{"path":"/reference/metaNet-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"metaNet: Statistical network exploration toolkit — metaNet-package","text":"~~ overview use package, including important functions ~~","code":""},{"path":"/reference/metaNet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"metaNet: Statistical network exploration toolkit — metaNet-package","text":"Ben Logsdon Maintainer: Ben Logsdon <ben.logsdon@sagebase.org> ~~ author /maintainer package ~~","code":""},{"path":"/reference/metaNet-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"metaNet: Statistical network exploration toolkit — metaNet-package","text":"references?","code":""},{"path":[]},{"path":"/reference/mpiWrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Sparrow Regression — mpiWrapper","title":"Runs Sparrow Regression — mpiWrapper","text":"function Sparrow Regression wrapped Rmpi::mpi parralel implementation. User specifies sparrowZ, sparrow2Z, sparrow2ZFDR implementation.","code":""},{"path":"/reference/mpiWrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Sparrow Regression — mpiWrapper","text":"","code":"mpiWrapper(   data,   nodes,   pathv,   regressionFunction,   outputpath,   eigen = NULL,   regulatorIndex = NULL,   hosts = NULL )"},{"path":"/reference/mpiWrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Sparrow Regression — mpiWrapper","text":"data Required. Expression matrix used network construction. nodes Required. number nodes run process . pathv Required. regressionFunction Required. Character vector specifying specific  sparrow regression function deploy. Options one c(\"sparrowZ\",  \"sparrow2Z\", \"sparrow2ZFDR\") outputpath Required. output path save resulting coexpression network eigen Optional. (Default = NULL) regulatorIndex Optional. (Default = NULL) hosts Optional. (Default = NULL)","code":""},{"path":"/reference/mpiWrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Sparrow Regression — mpiWrapper","text":"NULL. Saves sparrow network object paste0(`outputpath`, `regressionFunction`,'Network.csv')","code":""},{"path":"/reference/mrnetWrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements mrnet — mrnetWrapper","title":"Implements mrnet — mrnetWrapper","text":"function infers interaction network `data` using MRNET algorithm.","code":""},{"path":"/reference/mrnetWrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements mrnet — mrnetWrapper","text":"","code":"mrnetWrapper(data, path = NULL, pval = 1, outputpath)"},{"path":"/reference/mrnetWrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements mrnet — mrnetWrapper","text":"data Required. gene expression matrix rows sample IDs columns Gene feature IDs. path Optional. String containing path aracne compiled  executable. (Default = NULL) pval Optional. Cutoff p-value determine coexpressed edge. one specified aracne produce file `aracneNetwork.csv` less 1  produce file `aracneThresholdNetwork.csv`. (Default = 1) outputpath Required. output path save resulting coexpression network","code":""},{"path":"/reference/mrnetWrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements mrnet — mrnetWrapper","text":"NULL. Saves sparrow network object paste0(`outputpath`, `regressionFunction`,'mrnetNetwork.csv')","code":""},{"path":"/reference/multiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple plot function — multiplot","title":"Multiple plot function — multiplot","text":"function plots multiple ggplot objects passed either ..., plotlist (list ggplot objects).","code":""},{"path":"/reference/multiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple plot function — multiplot","text":"","code":"multiplot(..., plotlist = NULL, file = NULL, cols = 1, layout = NULL)"},{"path":"/reference/multiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple plot function — multiplot","text":"... Required. Multiple ggplot objects, plotlist list  ggplot objects plotlist Optional. list ggplot objects. (Default = NULL) file Optional. file name save plot , currently non-functional. (Default=NULL) cols Optional. (Default = 1) layout Optional. plot layout matrix. eg.  `layout = matrix(c(1,2,3,3), nrow=2, byrow=TRUE)`, plot 1 go  upper left, 2 go upper right, 3 go way across  bottom.","code":""},{"path":"/reference/multiplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple plot function — multiplot","text":"ggplot image","code":""},{"path":"/reference/rankConsensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranks Consensus networks — rankConsensus","title":"Ranks Consensus networks — rankConsensus","text":"function ranks list consensus network objects returns best  rank network.","code":""},{"path":"/reference/rankConsensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranks Consensus networks — rankConsensus","text":"","code":"rankConsensus(networks)"},{"path":"/reference/rankConsensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranks Consensus networks — rankConsensus","text":"networks Required. list object containing individual network  list entry.","code":""},{"path":"/reference/rankConsensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranks Consensus networks — rankConsensus","text":"best rank consensus network.","code":""},{"path":"/reference/rankConsensus2.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranks Consensus networks with ties. — rankConsensus2","title":"Ranks Consensus networks with ties. — rankConsensus2","text":"function ranks list consensus network objects returns best  rank network. version rank consensus compatible ties.","code":""},{"path":"/reference/rankConsensus2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranks Consensus networks with ties. — rankConsensus2","text":"","code":"rankConsensus2(networks)"},{"path":"/reference/rankConsensus2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranks Consensus networks with ties. — rankConsensus2","text":"networks Required. list object containing individual network  list entry.","code":""},{"path":"/reference/rankConsensus2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranks Consensus networks with ties. — rankConsensus2","text":"best rank consensus network.","code":""},{"path":"/reference/rankedEdgeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank edges of a coexpression matrix — rankedEdgeList","title":"Rank edges of a coexpression matrix — rankedEdgeList","text":"functions produces ranked edgelist coexpression matrix","code":""},{"path":"/reference/rankedEdgeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank edges of a coexpression matrix — rankedEdgeList","text":"","code":"rankedEdgeList(network, symmetric = FALSE, maxLength = 1e+07)"},{"path":"/reference/rankedEdgeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank edges of a coexpression matrix — rankedEdgeList","text":"network network object matrix object symmetric Optional. logical `TRUE` `FALSE` treat `network` symmetrical matrix. (Default = FALSE) maxLength Optional. maximum length output ranked edgelist. (Default = 1e7)","code":""},{"path":"/reference/rankedEdgeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank edges of a coexpression matrix — rankedEdgeList","text":"greatest least ranked list eddge strenge form  data.frame() object.","code":""},{"path":"/reference/regulatorAnalysis.directed.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Identify Network Regulators from Directed Networks — regulatorAnalysis.directed","title":"Function to Identify Network Regulators from Directed Networks — regulatorAnalysis.directed","text":"Identifies network un-weighted regulators directed networks","code":""},{"path":"/reference/regulatorAnalysis.directed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Identify Network Regulators from Directed Networks — regulatorAnalysis.directed","text":"","code":"regulatorAnalysis.directed(adj, G, h = 3, FDR = 0.05)"},{"path":"/reference/regulatorAnalysis.directed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Identify Network Regulators from Directed Networks — regulatorAnalysis.directed","text":"adj Required. n x n weighted upper triangular adjacency matrix  class format. G Required. named vector node scores. h Optional. Neighborhood search distance (h nodes away current node)  (Default = 3) FDR Optional. Adjusted pvalue cutoff regulator selection. (Default = 0.05)","code":""},{"path":"/reference/regulatorAnalysis.directed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Identify Network Regulators from Directed Networks — regulatorAnalysis.directed","text":"scores = n x 5 dimensional data frame columns giving neighborhood based score, adjusted pvalue, whether gene regulator/global regulator.","code":""},{"path":"/reference/regulatorAnalysis.directed_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Identify Network Regulators from Directed Weighted Networks — regulatorAnalysis.directed_weighted","title":"Function to Identify Network Regulators from Directed Weighted Networks — regulatorAnalysis.directed_weighted","text":"Identifies network regulators directed network weights.","code":""},{"path":"/reference/regulatorAnalysis.directed_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Identify Network Regulators from Directed Weighted Networks — regulatorAnalysis.directed_weighted","text":"","code":"regulatorAnalysis.directed_weighted(   adj,   G,   h = 3,   n = 100,   correction.method = \"bonferroni\",   pval.cutoff = 0.01 )"},{"path":"/reference/regulatorAnalysis.directed_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Identify Network Regulators from Directed Weighted Networks — regulatorAnalysis.directed_weighted","text":"adj Required. n x n weighted upper triangular adjacency matrix  class format. G Required. named vector node scores. h Optional. Neighborhood search distance (h nodes away current node)  (Default = 3) n Optional. Number randomisation pvalue computation. (Default = 100) correction.method Optional. Multiple testing correction method. Options ; c(\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\") (Default = 'bonferroni') pval.cutoff Optional. Adjusted pvalue cutoff regulator selection. (Default = 0.01)","code":""},{"path":"/reference/regulatorAnalysis.directed_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Identify Network Regulators from Directed Weighted Networks — regulatorAnalysis.directed_weighted","text":"scores = n x 5 dimensional data frame columns giving neighborhood based score, adjusted pvalue, whether gene regulator/global regulator.","code":""},{"path":"/reference/regulatorAnalysis.undirected.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Identify Network Regulators from Undirected Networks — regulatorAnalysis.undirected","title":"Function to Identify Network Regulators from Undirected Networks — regulatorAnalysis.undirected","text":"Identifies network un-weighted regulators Undirected networks","code":""},{"path":"/reference/regulatorAnalysis.undirected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Identify Network Regulators from Undirected Networks — regulatorAnalysis.undirected","text":"","code":"regulatorAnalysis.undirected(adj, G, h = 3, FDR = 0.05)"},{"path":"/reference/regulatorAnalysis.undirected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Identify Network Regulators from Undirected Networks — regulatorAnalysis.undirected","text":"adj Required. n x n weighted upper triangular adjacency matrix  class format. G Required. named vector node scores. h Optional. Neighborhood search distance (h nodes away current node)  (Default = 3) FDR Optional. Adjusted pvalue cutoff regulator selection. (Default = 0.05)","code":""},{"path":"/reference/regulatorAnalysis.undirected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Identify Network Regulators from Undirected Networks — regulatorAnalysis.undirected","text":"scores = n x 3 dimensional list columns giving neighborhood based score, adjusted pvalue, whether gene regulator/global regulator.","code":""},{"path":"/reference/regulatorAnalysis.undirected_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Identify Network Regulators from Undirected Weighted Networks — regulatorAnalysis.undirected_weighted","title":"Function to Identify Network Regulators from Undirected Weighted Networks — regulatorAnalysis.undirected_weighted","text":"Identifies network un-weighted regulators Weighted undirected networks","code":""},{"path":"/reference/regulatorAnalysis.undirected_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Identify Network Regulators from Undirected Weighted Networks — regulatorAnalysis.undirected_weighted","text":"","code":"regulatorAnalysis.undirected_weighted(adj, G, h = 3, n = 100, FDR = 0.05)"},{"path":"/reference/regulatorAnalysis.undirected_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Identify Network Regulators from Undirected Weighted Networks — regulatorAnalysis.undirected_weighted","text":"adj Required. n x n weighted upper triangular adjacency matrix  class format. G Required. named vector node scores. h Optional. Neighborhood search distance (h nodes away current node)  (Default = 3) n Optional. number permuations run. (Default = 100) FDR Optional. Adjusted pvalue cutoff regulator selection. (Default = 0.05)","code":""},{"path":"/reference/regulatorAnalysis.undirected_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Identify Network Regulators from Undirected Weighted Networks — regulatorAnalysis.undirected_weighted","text":"scores = n x 4 dimensional list columns giving neighborhood based score, adjusted pvalue, whether gene regulator/global regulator.","code":""},{"path":"/reference/ridgeAIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab AIC Solution for Ridge Regression — ridgeAIC","title":"Grab AIC Solution for Ridge Regression — ridgeAIC","text":"function runs glmnet() function ridge regression pulls  best AIC estimate.","code":""},{"path":"/reference/ridgeAIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab AIC Solution for Ridge Regression — ridgeAIC","text":"","code":"ridgeAIC(y, x, eigen)"},{"path":"/reference/ridgeAIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab AIC Solution for Ridge Regression — ridgeAIC","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix) eigen Required. Eigen cutoff value","code":""},{"path":"/reference/ridgeAIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab AIC Solution for Ridge Regression — ridgeAIC","text":"Lowest AIC value.","code":""},{"path":"/reference/ridgeBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab BIC Solution for Ridge Regression — ridgeBIC","title":"Grab BIC Solution for Ridge Regression — ridgeBIC","text":"function runs glmnet() function ridge regression pulls best  BIC estimate.","code":""},{"path":"/reference/ridgeBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab BIC Solution for Ridge Regression — ridgeBIC","text":"","code":"ridgeBIC(y, x, eigen)"},{"path":"/reference/ridgeBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab BIC Solution for Ridge Regression — ridgeBIC","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix) eigen Required. Eigen cutoff value","code":""},{"path":"/reference/ridgeBIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab BIC Solution for Ridge Regression — ridgeBIC","text":"Lowest BIC value.","code":""},{"path":"/reference/ridgeCV1se.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab CV1se Solution for Ridge Regression — ridgeCV1se","title":"Grab CV1se Solution for Ridge Regression — ridgeCV1se","text":"function runs glmnet() ridge regression pulls best beta value glmnet.fit object largest value lambda error  within 1 standard error minimum.","code":""},{"path":"/reference/ridgeCV1se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab CV1se Solution for Ridge Regression — ridgeCV1se","text":"","code":"ridgeCV1se(y, x, folds = 10)"},{"path":"/reference/ridgeCV1se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab CV1se Solution for Ridge Regression — ridgeCV1se","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix) folds Optional. number cross validation folds partition  data . (Default = 10)","code":""},{"path":"/reference/ridgeCV1se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab CV1se Solution for Ridge Regression — ridgeCV1se","text":"beta value glmnet.fit object largest value  lambda error within 1 standard error minimum.","code":""},{"path":"/reference/ridgeCVmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab CV1min Solution for Ridge Regression — ridgeCVmin","title":"Grab CV1min Solution for Ridge Regression — ridgeCVmin","text":"function runs glmnet() ridge regression pulls best beta  value glmnet.fit object value lambda gives minimum cvm.","code":""},{"path":"/reference/ridgeCVmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab CV1min Solution for Ridge Regression — ridgeCVmin","text":"","code":"ridgeCVmin(y, x, folds = 10)"},{"path":"/reference/ridgeCVmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab CV1min Solution for Ridge Regression — ridgeCVmin","text":"y Required. response variable. Quantitative family=\"gaussian\",  family=\"poisson\" (non-negative counts). family=\"binomial\" either  factor two levels, two-column matrix counts proportions  (second column treated target class; factor, last  level alphabetical order target class). family=\"multinomial\",  can nc>=2 level factor, matrix nc columns counts proportions.  either \"binomial\" \"multinomial\", y presented vector,  coerced factor. family=\"cox\", preferably Surv object  survival package: see Details section information. family=\"mgaussian\", y matrix quantitative responses. x Required. input matrix, dimension nobs x nvars; row observation vector.  Can sparse matrix format (inherit class \"sparseMatrix\" package Matrix) folds Optional. number cross validation folds partition  data . (Default = 10)","code":""},{"path":"/reference/ridgeCVmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab CV1min Solution for Ridge Regression — ridgeCVmin","text":"beta value glmnet.fit object value lambda gives  minimum cvm","code":""},{"path":"/reference/run.consensus.cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Consensus Clustering Algorithm — run.consensus.cluster","title":"Runs Consensus Clustering Algorithm — run.consensus.cluster","text":"modiefed parallel version code imported  https://github.com/Bioconductor-mirror/ConsensusClusterPlus 1.11.1. Taken  findModules.consensusCluster.R","code":""},{"path":"/reference/run.consensus.cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Consensus Clustering Algorithm — run.consensus.cluster","text":"","code":"run.consensus.cluster(   d,   kGrid = NULL,   repCount = NULL,   diss = inherits(d, \"dist\"),   pItem = NULL,   pFeature = NULL,   innerLinkage = NULL,   distance = NULL,   clusterAlg = NULL,   weightsItem = NULL,   weightsFeature = NULL,   verbose = NULL,   corUse = NULL )"},{"path":"/reference/run.consensus.cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Consensus Clustering Algorithm — run.consensus.cluster","text":"d Required. matrix columns=items/samples rows features.  example, gene expression matrix genes rows microarrays columns. ExpressionSet object. (Default = NULL) kGrid Optional. (Default = NULL) repCount Optional. Replicate count. (Default = NULL) diss Optional. distance matrix d. (Default = inherits( d, \"dist\" )) pItem Optional. numerical value. proportion items sample. (Default = 0.8) pFeature Optional. numerical value. proportion features sample. (Default = 1) innerLinkage Optional. heirarchical linkage method subsampling. (Default = \"average\") distance Optional. character value. sample distance measures:  \"pearson\",\"spearman\", \"euclidean\". (Default = \"pearson\") clusterAlg Optional. character value. cluster algorithm. \"hc\"  heirarchical (hclust) \"km\" kmeans. (Default = \"kmeans\") weightsItem Optional. numerical vector. weights used  sampling items. (Default = NULL) weightsFeature Optional. umerical vector. weights used  sampling features. (Default = NULL) verbose Optional. boolean set TRUE, prints messages  screen indicate progress. useful large datasets.(Default = FALSE) corUse Optional. Use cores avaiable. (Default = \"Everything\")","code":""},{"path":"/reference/run.consensus.cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Consensus Clustering Algorithm — run.consensus.cluster","text":"Clustered consensus matrix. areaUnderCDF = areaK,  consensus.matrix = cns.mtrx","code":""},{"path":"/reference/score.nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Scores Nodes From Regulator Discovery — score.nodes","title":"Scores Nodes From Regulator Discovery — score.nodes","text":"Function scores results regulator scoring analysis.","code":""},{"path":"/reference/score.nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scores Nodes From Regulator Discovery — score.nodes","text":"","code":"score.nodes(g, G, h = 3, mode = \"all\")"},{"path":"/reference/score.nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scores Nodes From Regulator Discovery — score.nodes","text":"g Required. igraph object n vertices G Required. named vector node scores. h Optional. Neighborhood search distance (h nodes away current node) (Default = 3) mode Optional. One c(\"\", \"\", \"\", \"total\"). Character string,  \"\" -degree, \"\" -degree \"\" sum two.  undirected graphs argument ignored. (Default = '')","code":""},{"path":"/reference/score.nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scores Nodes From Regulator Discovery — score.nodes","text":"node.scores = n x 1 dimensional vector node scores based neighborhood","code":""},{"path":"/reference/simulateNetworkData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Network Data — simulateNetworkData","title":"Simulate Network Data — simulateNetworkData","text":"function simulates gene correlation network inverse covariance matrix user determined size.","code":""},{"path":"/reference/simulateNetworkData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Network Data — simulateNetworkData","text":"","code":"simulateNetworkData(n, p, prop, adjustment = 10)"},{"path":"/reference/simulateNetworkData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Network Data — simulateNetworkData","text":"n Required. number rows simulate data. correspond  number simulated samples p Required. number columns simulate data. correspond  number gene features prop Required. value 0 1, corresponding probability value `rbinom()` adjustment expression values. adjustment Optional. matrix, vector, 1D array, missing. corresponds x vaule `diag()` adjustment inverse covariance matrix. (Default = 10)","code":""},{"path":"/reference/simulateNetworkData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Network Data — simulateNetworkData","text":"list containing simulated network inverse covariance matrix simulated network.s","code":""},{"path":"/reference/sparrow2Z.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs vbsr with a 2Z cutoff for a gene across a matrix — sparrow2Z","title":"Runs vbsr with a 2Z cutoff for a gene across a matrix — sparrow2Z","text":"function wraps variable bays spike regression genes expression across matrix genes expressed samples 2Z cutoff value.","code":""},{"path":"/reference/sparrow2Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs vbsr with a 2Z cutoff for a gene across a matrix — sparrow2Z","text":"","code":"sparrow2Z(   y,   x,   fdr = NULL,   ordering_mat = NULL,   eps = 1e-06,   exclude = NULL,   add.intercept = TRUE,   maxit = 10000,   n_orderings = 10,   family = \"normal\",   scaling = TRUE,   return_kl = TRUE,   estimation_type = \"BMA\",   bma_approximation = TRUE,   screen = 1,   post = 0.95,   already_screened = 1,   kl = 0.99,   l0_path = NULL,   cleanSolution = FALSE )"},{"path":"/reference/sparrow2Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs vbsr with a 2Z cutoff for a gene across a matrix — sparrow2Z","text":"y Required. response variable. Normally distributed errors  family=\"normal\". family=\"binomial\" coded vector 0's 1's. x Required. Design matrix, n x m matrix, rows observations. fdr Optional. FDR threshold cut edge determination. NULL results cutoff 0.05 (Default = NULL) ordering_mat Optional. Optionally specified coordinate update ordering matrix. Must matrix form columns permutation vectors length m,  must n_orderings columns. (Default = NULL) eps Optional. Tolerance used determine convergence algorithm  based lower bound. (Default = 1e-6) exclude Optional. optional indicator vector length m 0's  1's indicating whether penalize particular variable (0=penalize,  1=unpenalized) (Default = NULL) add.intercept Optional. boolean variable indicating whether  include unpenalized intercept variable. (Default = TRUE) maxit Optional. maximum number iterations run algorithm  given solution penalized regression problem. (Default = 1e4) n_orderings Optional. number random starts used. (Default = 10) family Optional. type error model used. Currently supported modes  family=\"normal\" family=\"binomial\". (Default = \"normal\") scaling Optional. type error model used. Currently supported  modes family=\"normal\" family=\"binomial\" (Default = TRUE) return_kl Optional. boolean variable indicating whether return analysis null distributed features data-set  function penalty parameter. (Default = TRUE) estimation_type Optional. type estimation perform based  number unique solution identified penalized regression problem.  Valid values estimation_type=\"BMA\" estimation_type=\"MAXIMAL\"  (Default = \"BMA\") bma_approximation Optional. boolean variable indicating whether  compute full correction z statistic. WARNING can make algorithm  computationally intensive highly multi-modal posterior surfaces. (Default = TRUE) screen Optional. P-value marginal screening. Default marginal prescreening (e.g marginal p-value 1.0) (Default = 1.0) post Optional. Choice penalty parameter feature posterior probability 0.95 passes Bonferroni correction  multivariate model. Default post=.95. conservative approach  post=0.5(Default =0.95) already_screened Optional. features already screened,  marginal p-value used screening. (Default = 1.0) kl Optional. features already screened, marginal p-value  used screening. (Default = 0.99) l0_path Optional. path penalty parameters solve spike  regression problem. post specified, computed automatically. (Default =NULL) cleanSolution Optional. parameter determines whether given  solution filtered using unpenalized model. cleanSolution=TRUE,  features significant Bonferroni correction given  p-values vbsr regression model tested unpenalized  linear regression model. p-values z-statistics updated using  Wald test unpenalized linear regression model features  selected.(Default =FALSE)","code":""},{"path":"/reference/sparrow2Z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs vbsr with a 2Z cutoff for a gene across a matrix — sparrow2Z","text":"coexpression value","code":""},{"path":"/reference/sparrowNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs wraps vbsr across a matrix — sparrowNetwork","title":"Runs wraps vbsr across a matrix — sparrowNetwork","text":"function wraps variable bays spike regression calling vsbr genes  pairwise across expression matrix","code":""},{"path":"/reference/sparrowNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs wraps vbsr across a matrix — sparrowNetwork","text":"","code":"sparrowNetwork(data)"},{"path":"/reference/sparrowNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs wraps vbsr across a matrix — sparrowNetwork","text":"data Required. .","code":""},{"path":"/reference/sparrowNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs wraps vbsr across a matrix — sparrowNetwork","text":"coexpression matrix","code":""},{"path":"/reference/sparrowZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs vbsr gene across a matrix — sparrowZ","title":"Runs vbsr gene across a matrix — sparrowZ","text":"function wraps variable bays spike regression genes expression across matrix genes expressed samples.","code":""},{"path":"/reference/sparrowZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs vbsr gene across a matrix — sparrowZ","text":"","code":"sparrowZ(   y,   x,   ordering_mat = NULL,   eps = 1e-06,   exclude = NULL,   add.intercept = TRUE,   maxit = 10000,   n_orderings = 10,   family = \"normal\",   scaling = TRUE,   return_kl = TRUE,   estimation_type = \"BMA\",   bma_approximation = TRUE,   screen = 1,   post = 0.95,   already_screened = 1,   kl = 0.99,   l0_path = NULL,   cleanSolution = FALSE )"},{"path":"/reference/sparrowZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs vbsr gene across a matrix — sparrowZ","text":"y Required. response variable. Normally distributed errors  family=\"normal\". family=\"binomial\" coded vector 0's 1's. x Required. Design matrix, n x m matrix, rows observations. ordering_mat Optional. Optionally specified coordinate update ordering matrix. Must matrix form columns permutation vectors length m,  must n_orderings columns. (Default = NULL) eps Optional. Tolerance used determine convergence algorithm  based lower bound. (Default = 1e-6) exclude Optional. optional indicator vector length m 0's  1's indicating whether penalize particular variable (0=penalize,  1=unpenalized) (Default = NULL) add.intercept Optional. boolean variable indicating whether  include unpenalized intercept variable. (Default = TRUE) maxit Optional. maximum number iterations run algorithm  given solution penalized regression problem. (Default = 1e4) n_orderings Optional. number random starts used. (Default = 10) family Optional. type error model used. Currently supported modes  family=\"normal\" family=\"binomial\". (Default = \"normal\") scaling Optional. type error model used. Currently supported  modes family=\"normal\" family=\"binomial\" (Default = TRUE) return_kl Optional. boolean variable indicating whether return analysis null distributed features data-set  function penalty parameter. (Default = TRUE) estimation_type Optional. type estimation perform based  number unique solution identified penalized regression problem.  Valid values estimation_type=\"BMA\" estimation_type=\"MAXIMAL\"  (Default = \"BMA\") bma_approximation Optional. boolean variable indicating whether  compute full correction z statistic. WARNING can make algorithm  computationally intensive highly multi-modal posterior surfaces. (Default = TRUE) screen Optional. P-value marginal screening. Default marginal prescreening (e.g marginal p-value 1.0) (Default = 1.0) post Optional. Choice penalty parameter feature posterior probability 0.95 passes Bonferroni correction  multivariate model. Default post=.95. conservative approach  post=0.5(Default =0.95) already_screened Optional. features already screened,  marginal p-value used screening. (Default = 1.0) kl Optional. features already screened, marginal p-value  used screening. (Default = 0.99) l0_path Optional. path penalty parameters solve spike  regression problem. post specified, computed automatically. (Default =NULL) cleanSolution Optional. parameter determines whether given  solution filtered using unpenalized model. cleanSolution=TRUE,  features significant Bonferroni correction given  p-values vbsr regression model tested unpenalized  linear regression model. p-values z-statistics updated using  Wald test unpenalized linear regression model features  selected.(Default =FALSE)","code":""},{"path":"/reference/sparrowZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs vbsr gene across a matrix — sparrowZ","text":"coexpression value","code":""},{"path":"/reference/synGetFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"This function pulls files from a synapse project — synGetFiles","title":"This function pulls files from a synapse project — synGetFiles","text":"function downloads network files synapse parent folder using synID folder containing folders specific network types. uses name folder plus pattern id eg. 'Network' find network files.  example `ridgeAIC/` folder `project_id` need contain `ridgeAICNetwork` file pattern_id = 'Network' `project_id` set  parent folder containing `ridgeAIC/`. files downloaded path specified `downloadLocation`.","code":""},{"path":"/reference/synGetFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function pulls files from a synapse project — synGetFiles","text":"","code":"synGetFiles(project_id, pattern_id, downloadLocation = getwd())"},{"path":"/reference/synGetFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function pulls files from a synapse project — synGetFiles","text":"project_id Required. character vector synapse ID synapse project. pattern_id Required. character vector match file names  children entities `project_id`. downloadLocation Optional. Local directory download files .  Default = `getwd()`","code":""},{"path":"/reference/synGetFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function pulls files from a synapse project — synGetFiles","text":"character vector file paths","code":""},{"path":"/reference/tigress.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs tigress on an expression matrix — tigress","title":"Runs tigress on an expression matrix — tigress","text":"function implements Trustful Inference Gene REgulation Stability  Selection (TIGRESS) algoritm..","code":""},{"path":"/reference/tigress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs tigress on an expression matrix — tigress","text":"","code":"tigress(y, x)"},{"path":"/reference/tigress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs tigress on an expression matrix — tigress","text":"y Required. vector gene expression values. x Required. gene expression matrix.","code":""},{"path":"/reference/tigress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs tigress on an expression matrix — tigress","text":"Vector coexpression values gene Y columns X","code":""},{"path":"/reference/wgcnaSoftThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs WGCNA — wgcnaSoftThreshold","title":"Runs WGCNA — wgcnaSoftThreshold","text":"Runs WGCNA::pickSoftThreshold gene expression matrix.","code":""},{"path":"/reference/wgcnaSoftThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs WGCNA — wgcnaSoftThreshold","text":"","code":"wgcnaSoftThreshold(   data,   path = NULL,   pval = 1,   outputpath,   RsquaredCut = 0.8,   defaultNaPower = 6 )"},{"path":"/reference/wgcnaSoftThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs WGCNA — wgcnaSoftThreshold","text":"data Required. Gene expression data matrix data frame. Rows  correspond samples columns genes. path Optional. utilized function. (Default = NULL) pval Optional. utilized function. (Default = 1) outputpath Required. file path write resulting coexpression  network. RsquaredCut Optional. Desired minimum scale free topology fitting index  R^2. (Default = 0.80) defaultNaPower Optional. power rais abs(cor(data)) matrix thee power estimate WGCNA::pickSoftThreshold() low (Default = 6).","code":""},{"path":"/reference/wgcnaSoftThreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs WGCNA — wgcnaSoftThreshold","text":"NULL. Writes coexpression network named wgcnaSoftThresholdNetwork.csv `outputpath`","code":""},{"path":"/reference/wgcnaTOM.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs WGCNA TOMsimilarity — wgcnaTOM","title":"Runs WGCNA TOMsimilarity — wgcnaTOM","text":"Runs WGCNA::TOMsimilarity gene expression matrix.","code":""},{"path":"/reference/wgcnaTOM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs WGCNA TOMsimilarity — wgcnaTOM","text":"","code":"wgcnaTOM(   data,   path = NULL,   pval = 1,   outputpath,   RsquaredCut = 0.8,   defaultNaPower = 6 )"},{"path":"/reference/wgcnaTOM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs WGCNA TOMsimilarity — wgcnaTOM","text":"data Required. Gene expression data matrix data frame. Rows  correspond samples columns genes. path Optional. utilized function. (Default = NULL) pval Optional. utilized function. (Default = 1) outputpath Required. file path write resulting coexpression  network. RsquaredCut Optional. Desired minimum scale free topology fitting index  R^2. (Default = 0.80) defaultNaPower Optional. power rais abs(cor(data)) matrix thee power estimate WGCNA::pickSoftThreshold() low (Default = 6).","code":""},{"path":"/reference/wgcnaTOM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs WGCNA TOMsimilarity — wgcnaTOM","text":"NULL. Writes coexpression network named wgcnaTopologicalOverlapMatrixNetwork.csv `outputpath`","code":""},{"path":"/reference/winsorizeData.html","id":null,"dir":"Reference","previous_headings":"","what":"Winsorize a Gene Expression Matrix — winsorizeData","title":"Winsorize a Gene Expression Matrix — winsorizeData","text":"winsorize given gene expression matrix","code":""},{"path":"/reference/winsorizeData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Winsorize a Gene Expression Matrix — winsorizeData","text":"","code":"winsorizeData(x)"},{"path":"/reference/winsorizeData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Winsorize a Gene Expression Matrix — winsorizeData","text":"x Gene expression matrix","code":""},{"path":"/reference/winsorizeData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Winsorize a Gene Expression Matrix — winsorizeData","text":"winsorized expression matrix","code":""}]
